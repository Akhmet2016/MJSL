/////prompt/////////////////////////////////////////////////////////////////////////

Функция prompt принимает два аргумента:

result = prompt(title, default);
Она выводит модальное окно с заголовком title, полем для ввода текста,
заполненным строкой по умолчанию default и кнопками OK/CANCEL.

Пользователь должен либо что-то ввести и нажать OK, либо отменить ввод кликом на CANCEL
или нажатием Esc на клавиатуре.

Пример: prompt("messag", "go in the club");

/////confirm/////////////////////////////////////////////////////////////////////////

Синтаксис:

result = confirm(question);
confirm выводит окно с вопросом question с двумя кнопками: OK и CANCEL.

Результатом будет true при нажатии OK и false – при CANCEL(Esc).

Например:

 var isAdmin = confirm("Вы - администратор?");

alert( isAdmin );

////////////////////////////////////////////////////////////////////////////////////

outer: for (var i = 0; i < 3; i++) {

  for (var j = 0; j < 3; j++) {

    var input = prompt('Значение в координатах '+i+','+j, '');

    // если отмена ввода или пустая строка -
    // завершить оба цикла
    if (!input) break outer; // (*)

  }
}
alert('Готово!');

////////////////////////new Function/////////////////////////////////////////////

Существует ещё один способ создания функции, который используется очень редко, но упомянем и его для полноты картины.

Он позволяет создавать функцию полностью «на лету» из строки, вот так:


var sum = new Function('a,b', ' return a+b; ');
var result = sum(1, 2);
alert( result ); // 3


То есть, функция создаётся вызовом new Function(params, code):
params
Параметры функции через запятую в виде строки.
code
Код функции в виде строки.
Таким образом можно конструировать функцию, код которой неизвестен на момент написания программы, но строка с ним генерируется или подгружается динамически во время её выполнения.
